plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 30

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "API_KEY", '"f9496090c57e3bb513d347f94272e27c"')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(":common")
    implementation project(':data')

    // Add dependencies
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api  'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.3'
    api('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"


    // Test
    testImplementation "junit:junit:$junitVersion"
    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    // Run Blocking Test
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    // Truth
    testImplementation "com.google.truth:truth:$truthVersion"
    // For small test - large test annotations
    testImplementation "androidx.test:runner:$testRunnerVersion"
    // Mock objects
    testImplementation "io.mockk:mockk:$mockkVersion"
}